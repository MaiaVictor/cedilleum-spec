module le .

data Nat : ★ :=
  | zero : Nat
  | suc  : Nat ➔ Nat
  .

data LE : Nat ➔ Nat ➔ ★ :=
 | LE-R : ∀ n : Nat . LE n n
 | LE-S : ∀ n,m,m' : Nat . LE n m ➔ { m ≃ suc m' } ➾ LE n m'
 .

le-zero-n
  : Π n : Nat . LE zero n
  = λ n . μ lez . n @λ x . LE zero x
      { | zero ↦       -- expected: LE zero (toNat/lez zero)
            LE-R -zero -- computed: LE zero zero
        | suc r ↦      -- expected: LE zero (toNat/lez $ suc r)
            [ r' : Nat = toNat/lez r] -
            [ ih : LE zero (toNat/lez r) = lez r] -
            LE-S -zero -r' -(suc r') ih -β
                       -- computed: LE zero (suc $ toNat/lez r)
       }
   .